# Bag information:
gps_topic: "/piksi/navsatfix_best_fix"
lidar_topic: "/hvlp/velodyne_points"   # CHANGE THIS TO COMBINED CLOUD
bag_file_path: "/home/nick/bag_files/ig_scans/ig_scan_2018-07-06-09-15-39-short1.bag"

# PassThrough Filter: set min and max in each direction for input cloud
use_pass_through_filter: true
x_upper_threshold: 60
x_lower_threshold: -60
y_upper_threshold: 60
y_lower_threshold: -60
z_upper_threshold: 1.8
z_lower_threshold: -2

# Voxel Grid Filter (input clouds):
downsample_input: true
input_downsample_size: 0.2

# Radius outlier removal filter (input clouds)
use_rad_filter: true
set_min_neighbours: 2
set_search_radius: 0.5

# Ground segmentation - THIS IS NOT IMPLEMENTED
ground_segment: false               # Whether to remove the ground points. This
                                    # will greatly improve match speed, but may
                                    # reduce elevation accuracy of final map

# Voxel filtering
downsample_cell_size: 0.2          # Voxel cell length for final downsampling of aggregate map

# Mapping Parameters
scanreg_init_icp_distance_max: 25   # distance limit between two initial scan locations to be considered for nearest neighbours
k_nearest_neighbours: 15            # maximum number of nearest neighbours for graph links
trajectory_sampling_distance: 1   # Minimum distance in m at which we should take new scans
distance_match_min: 0               # specify minimum and maximum distance between scans to
distance_match_limit: 20            # use for scan registration
iterations: 1                       # How many times to update initial estimates and redo matches
use_gps: false                      # Whether to use GPS priors in graph optimization. Even if set false, GPS will be
                                    # TODO: KEEP FALSE UNTIL WE HAVE RPY IN GPS MESSAGE
                                    # used to supply initial estimates for the matcher.
optimize_gps_lidar: false           # NOT IMPLEMENTED-whether to optimize extrinsic GPS - lidar transform.
visualize: false                    # Whether to visualize matches as they happen
step_matches: false
matcher_type: "icp1"    # icp1: point to plane icp in PCL, icp2: point to plane in PCL
matcher_config_path: "/home/nick/ig_catkin_ws/src/ig_graph_slam/config/icp1.yaml"
# Use this if you want to set a given cov to the scan registrations.
# Otherwise, it will use the wave::ICPMatcher::estimateInfo() function
fixed_scan_transform_cov: false
scan_transform_cov:
  rows: 6
  cols: 6
  data: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
         0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
         0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
         0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
         0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
         0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
T_LIDAR_GPS: # this is used to transform the lidar to the map frame for pose initialization
  rows: 4
  cols: 4
  data: [ 1.00000,   0.00000,   0.00000,  -0.16450,
          0.00000,   1.00000,   0.00000,   0.16100,
          0.00000,   0.00000,   1.00000,   0.22860,
          0.00000,   0.00000,   0.00000,   1.00000]
